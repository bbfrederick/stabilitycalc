#!/usr/bin/env python

import re
import os
from os.path import join as pjoin
import time
from subprocess import Popen
from stabilityfuncs import stabilityparms
from studyinfo import studyinfo_from_dicom


stab_bindir = stabilityparms('bindir')
datadirectory = stabilityparms('rawdicomdir')
outputdirectory = stabilityparms('sorteddicomdir')

#
# scan the data directory for stability scans which haven't been renamed
# and haven't been altered in the last 5 minutes
#
stabilitydirs = os.listdir(datadirectory)
# TODO is there any reason for this line? why not just have os.listdir in the filt line?
dirstorename = [examname for examname in stabilitydirs]
now = time.time()
dirstorenamefilt = [examname for examname in dirstorename
                    if (not(examname.startswith('.'))
                        and not(examname.startswith('duplicates'))
                        and not(examname.startswith('notstability'))
                        and not((now - os.stat(pjoin(datadirectory, examname)).st_mtime) < 180))]

# first rename files at the top level to get rid of spaces
for dirname in dirstorenamefilt:
    newname = re.sub(' ', '_', dirname)
    os.rename(pjoin(datadirectory, dirname), pjoin(datadirectory, newname))

#
# regenerate the directory list now that spaces have been removed
#
stabilitydirs = os.listdir(datadirectory)
# print 'stabilitydirs = ',stabilitydirs
dirstorename = [examname for examname in stabilitydirs]
# print 'dirstorename = ',dirstorename
dirstorenamefilt = [examname for examname in dirstorename
                    if (not(examname.startswith('.'))
                        and not(examname.startswith('duplicates'))
                        and not(examname.startswith('notstability'))
                        and not((now - os.stat(pjoin(datadirectory, examname)).st_mtime) < 300))]

print('dirstorenamefilt=', dirstorenamefilt)

for examname in dirstorenamefilt:
    examdir = datadirectory + '/' + examname
    print('processing ', examdir)
    Popen([pjoin(stab_bindir, 'renamealldicoms'), examdir])
    seriesdir = examdir
    scannames = [subprotocolname for subprotocolname in os.listdir(seriesdir)
                 if not(subprotocolname.startswith('.'))]
    scandir = pjoin(seriesdir, scannames[0])
    try:
        dicomnames = [filename for filename in os.listdir(scandir)
                      if filename.endswith('0001.dcm')]
        if dicomnames:
            # we process directories that have dicoms in them, otherwise skip them
            studyinfo = studyinfo_from_dicom(dicomnames[0])
            newtldirname = '_'.join(('stability',
                                     studyinfo['StudyDate'],
                                     studyinfo['StudyTime'].split('.')[0],
                                     studyinfo['Coil']))
            print('attempting to move ', examdir, ' to ', newtldirname)
            os.rename(examdir, pjoin(datadirectory, newtldirname))
            examdir = pjoin(datadirectory, newtldirname)

            # now move into the output directory and process the data
            if os.path.exists(pjoin(outputdirectory, newtldirname)):
                destdir = pjoin(datadirectory, 'duplicates', examname)
                print('Directory already exists - moving to duplicates...')
                os.rename(examdir, destdir)
            else:
                os.rename(examdir, pjoin(outputdirectory, newtldirname))
                Popen([pjoin(stab_bindir, 'processstability'), newtldirname])
    except OSError:
        # we get here if there are no subdirectories in scandir
        destdir = pjoin(datadirectory, 'notstability', examname)
        print(scandir + ' is not a valid stability directory; no subdirectories - moving to ' + destdir)
        os.rename(examdir, destdir)
